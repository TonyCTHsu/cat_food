name: Publish

on:
  push:
    branches:
      - master

jobs:
  build-gem:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: "3.2.2"
      - name: Build gem
        run: bundle exec rake build
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: gem
          path: pkg/*.gem

  prepare-release:
    runs-on: ubuntu-latest
    needs: build-gem
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: gem
          path: pkg
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: "3.2.2"
      - name: Read gem version
        id: gem_version
        run: |
          version=$(ruby -r rubygems -e "spec = Gem::Specification::load(Dir.glob('*.gemspec').first); puts spec.version")
          echo "gem_version=$version" >> $GITHUB_ENV
      - name: Draft release
        id: release
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { repo: { owner, repo } } = context;
            const tag_name = "v" + process.env.gem_version;
            const release = await github.rest.repos.createRelease({
              owner,
              repo,
              tag_name: tag_name,
              draft: true,
              generate_release_notes: true
            });

            console.log(release.data);
            return release.data;
      - name: Upload asset
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs');
            const { repo: { owner, repo } } = context;
            const release = ${{ steps.release.outputs.result }};
            const gemFile = fs.readdirSync('./pkg').find(name => name.endsWith('.gem'));
            const gemPath = `./pkg/${gemFile}`;

            const asset = await github.rest.repos.uploadReleaseAsset({
              owner,
              repo,
              release_id: release.id,
              origin: release.upload_url,
              name: gemFile,
              data: fs.readFileSync(gemPath),
              headers: {
                'content-type': 'application/octet-stream',
                'content-length': fs.statSync(gemPath).size,
              },
            });

            console.log(asset.data);

  publish-gem:
    runs-on: ubuntu-latest
    needs: prepare-release

    permissions:
      contents: write
      id-token: write

    steps:
      # Set up
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: gem
          path: pkg
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: "3.2.2"
      - name: Set remote URL
        run: |
          # Attribute commits to the last committer on HEAD
          git config --global user.email "$(git log -1 --pretty=format:'%ae')"
          git config --global user.name "$(git log -1 --pretty=format:'%an')"
          git remote set-url origin "https://x-access-token:${{ github.token }}@github.com/$GITHUB_REPOSITORY"
        shell: bash
      - name: Configure trusted publishing credentials
        uses: rubygems/configure-rubygems-credentials@v1.0.0
      - name: Push tag
        run: bundle exec rake release:source_control_push
      - name: gem push
        run: gem push pkg/*.gem
        shell: bash
      - name: Wait for release to propagate
        run: gem exec rubygems-await pkg/*.gem
        shell: bash
